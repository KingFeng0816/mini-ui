<style scoped>
.container, page {
  height: 100%;
}
.topView {
  width: 686rpx;
  background: white;
  border-radius: 20rpx;
  margin: 32rpx auto;
  display: flex;
  flex-direction: column;
  padding: 0 16rpx;
}
.topView .header {
  padding: 18rpx 0;
  font-size: 32rpx;
  font-weight: 600;
  border-bottom: 1rpx solid #DEDEDE;
}
.topView .content {
  padding-top: 48rpx;
  padding-bottom: 40rpx;
  display: flex;
  flex-direction: row;
}
.topViewItem {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.topViewItem .num {
  font-size: 48rpx;
  font-weight: bold;
  color: #57AF4A;
}
.topViewItem .title {
  font-size: 28rpx;
  color: #00000080;
}
.contentView {
  width: 100%;
  display: flex;
  flex-direction: column;
  background: white;
  flex: 1;
}
.contentView .header {
  margin: 0 32rpx;
  border-bottom: 1rpx solid #DEDEDE;
  display: flex;
  flex-direction: row;
}
.contentView .header .title {
  font-size: 36rpx;
  font-weight: 600;
  margin: 26rpx 0;
}
.contentView .header .warningBtn {
  display: flex;
  margin-left: auto;
  flex-direction: row;
  align-items: center;
}
.contentView .header .warningBtn .icon {
  width: 32rpx;
  margin-right: 16rpx;
}
.contentView .header .warningBtn .name {
  font-size: 32rpx;
}
.contentView .titleRow {
  display: flex;
  flex-direction: row;
  padding: 12rpx 0;
}
.titleRow .titleBlock {
  flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.titleBlock .title {
  font-size: 28rpx;
  color: #00000080;
}
.titleBlock .icon {
  width: 16rpx;
  margin-left: 10rpx;
}
.dataRow {
  display: flex;
  flex-direction: row;
  padding: 16rpx 0;
}
.dataRow .dataBlock {
  flex: 1;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.dataBlock .title {
  font-size: 28rpx;
}
.formView {
  width: 100%;
  display: flex;
  flex-direction: column;
  flex: 1;
}
.formView .content {
  width: 100%;
  height: 100%;
}
.dataContent {
  padding-bottom: 32rpx;
  display: flex;
  flex-direction: column;
}
</style>
<template>
  <view class="container">
    <view class="topView">
      <view class="header">
        当前库存
      </view>
      <view class="content">
        <view class="topViewItem">
          <view class="num">{{productVarietyNum}}</view>
          <view class="title">品种</view>
        </view>
        <view class="topViewItem">
          <view class="num">{{productTotalCostPrice}}</view>
          <view class="title">成本</view>
        </view>
        <view class="topViewItem">
          <view class="num">{{productWarnNum}}</view>
          <view class="title">预警商品数</view>
        </view>
      </view>
    </view>
    <view class="contentView">
      <view class="header">
        <view class="title">库存详情</view>
        <view class="warningBtn">
          <image class="icon" mode="widthFix" src="/images/icon_activited_16.png">
          <view class="name">库存预警</view>
        </view>
      </view>
      <view class="titleRow">
        <view class="titleBlock">
          <view class="title">
            商品名称
          </view>
        </view>
        <view class="titleBlock">
          <view class="title">
            库存量
          </view>
          <image class="icon" mode="widthFix" src="/images/icon_arrow_down_gray_8.png" />
        </view>
        <view class="titleBlock">
          <view class="title">
            库存单价
          </view>
          <image class="icon" mode="widthFix" src="/images/icon_arrow_down_gray_8.png" />
        </view>
        <view class="titleBlock">
          <view class="title">
            成本
          </view>
          <image class="icon" mode="widthFix" src="/images/icon_arrow_down_gray_8.png" />
        </view>
      </view>
      <view class="formView">
        <scroll-view class="content" scroll-y>
          <view class="dataContent">
            <view class="dataRow"wx:for="{{repertoryEntityList}}">
              <view class="dataBlock">
                <view class="title">
                  {{item.productName}}
                </view>
              </view>
              <view class="dataBlock">
                <view class="title">
                  180
                </view>
              </view>
              <view class="dataBlock">
                <view class="title">
                  5元/公斤
                </view>
              </view>
              <view class="dataBlock">
                <view class="title">
                  3元/公斤
                </view>
              </view>
            </view>
          </view>
        </scroll-view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {getProductRepertoryData} from "../../store/actions/inventoryOverview.js";
  export default class InventoryOverview extends wepy.page {
    config = {
      navigationBarTitleText: '库存概况'
    };
    components = {
    };
    data = {
      productVarietyNum:0,
      productTotalCostPrice:0,
      productWarnNum:0,
      repertoryEntityList:[],
    };
    computed = {
    };
    methods = {
    };
    events = {
    };
    onLoad() {
      let currentThis = this;
      getProductRepertoryData(function (result) {
        console.log(result);
        /*品种数量*/
        currentThis.productVarietyNum = result.data.data.productVarietyNum;
        /*品种总成本*/
        currentThis.productTotalCostPrice = result.data.data.productTotalCostPrice;
        /*预警商品数*/
        currentThis.productWarnNum = result.data.data.productWarnNum;
        /*商品列表*/
        currentThis.repertoryEntityList = result.data.data.repertoryEntityList;
        currentThis.$apply();
      });
    }
  }
</script>
